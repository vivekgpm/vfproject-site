rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin";
    }

    // Users collection rules
    match /users/{userId} {
      allow read: if request.auth != null && (
        request.auth.uid == userId ||  // User can read their own document
        isAdmin()                      // Admin can read all users
      );
      allow write: if isAdmin();       // Only admin can write user documents
    }

    // Transactions collection rules
    match /transactions/{transactionId} {
      allow read: if request.auth != null && (
        // User can read their own transactions
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.bdaId == resource.data.userId ||
        isAdmin()  // Admin can read all transactions
      );
      allow write: if isAdmin();  // Only admin can create/update transactions
    }

    // PlanMaster collection rules
    match /planMaster/{planId} {
      allow read: if request.auth != null;    // Any authenticated user can read plans
      allow write: if isAdmin();              // Only admin can modify plans
    }

    // Default deny for any other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 